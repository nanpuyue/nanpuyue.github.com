<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[南浦月]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="http://blog.nanpuyue.com/"/>
  <updated>2014-03-16T07:19:33.509Z</updated>
  <id>http://blog.nanpuyue.com/</id>
  
  <author>
    <name><![CDATA[南浦月]]></name>
    <email><![CDATA[nanpuyue@gmail.com]]></email>
  </author>
  
  <generator uri="http://zespia.tw/hexo/">Hexo</generator>
  
  <entry>
    <title><![CDATA[GeoGebra——值得拥有的动态数学软件]]></title>
    <link href="http://blog.nanpuyue.com/2013/029.html"/>
    <id>http://blog.nanpuyue.com/2013/029.html</id>
    <published>2013-03-14T09:41:00.000Z</published>
    <updated>2013-07-25T02:10:53.000Z</updated>
    <content type="html"><![CDATA[<h2 id="GeoGebra是什么">GeoGebra是什么</h2>
<p>如果你还没有听说过GeoGebra，那么可以看看<a href="https://zh.wikipedia.org/wiki/GeoGebra" target="_blank">维基百科上的介绍</a>：  </p>
<blockquote>
<p>GeoGebra 是一个在GPL协议下发布的动态几何软件。 该项目于2001年由Markus Hohenwarter在萨尔茨堡大学创建，现在在佛罗里达州立大学进行维护。GeoGebra由Java写成，因此可以跨平台使用。</p>
<p>GeoGebra是一款动态几何软件。其绘图的基本元素包括点，直线，线段，多边形，向量，圆锥曲线和函数。（3.2及以后的版本还加入了电子表格和正在不断完善的数据处理功能）这些绘图元素均可在创建后直接在屏幕或者使用命令动态改变。 GeoGebra可以完成大量初高等数学中的绘图工作。比如GeoGebra可以直接绘制圆锥曲线，对函数求导数，积分，对多项式函数求极值和拐点等，这些极大的方便了教师们制作教学材料。</p>
</blockquote>
<p>如果你还是不太清楚，那么我可以告诉你它和几何画板是同一类软件，但是功能强大，可以说让几何画板难望其项背，除此之外GeoGebra还具有以下优势：  </p>
<ul>
<li>开源软件，完全免费</li>
<li>横跨Linux、Windows、Mac三大平台</li>
<li>国际语言支持，包含中文</li>
<li>中文指令支持，简单直观</li>
<li>支持LaTex语法</li>
<li>还有很多…</li>
</ul>
<h2 id="GeoGebra在中国">GeoGebra在中国</h2>
<p>这个话题就要从台湾谈起了，GeoGebra在台湾是很普及的，台湾师范大学的几位教授首先在台湾对GeoGebra进行了研究和推广，软件最初中文化的工作也是由他们完成的。所以在GeoGebra的研究和使用上台湾已经走在了大陆的前面，并且已经做出了很多卓有成效的工作。  </p>
<p>大陆这边对GeoGebra的研究才刚刚起步，2011年，在北京师范大学数学科学研究院曹一鸣教授牵头下成立了中国GeoGebra研究院成立，为GeoGebra在中国的首席研究院，随后在天津师范大学和南京师范大学的努力下，天津GeoGebra研究院和南京GeoGebra也相继成立。  </p>
<p>同时国内的GeoGebra用户并不多，也许是因为几何画板先入为主的原因，国内几乎都是几何画板的天下，相关的资料也很多，很多大学的相关课程也会涉及几何画板。但是几何画板毕竟是需要付费的商业软件，而且国内的正版用户也寥寥无几，大部分都是盗版，并且几何画板官方也是没有中文版的，国内流传的大部分都是网友制作的汉化破解版。在知识产权日益收到重视的今天，使用盗版软件并不是明智的选择。  </p>
<h2 id="从哪里可以获取GeoGebra">从哪里可以获取GeoGebra</h2>
<p>GeoGebra是开源软件，以GPL协议发布，你可以在其官方网站免费下载使用。  </p>
<p>官方网站：<a href="http://www.geogebra.org" target="_blank">http://www.geogebra.org</a><br>中文页面：<a href="http://www.geogebra.org/cms/zh_TW" target="_blank">http://www.geogebra.org/cms/zh_TW</a><br>安装包：<a href="http://www.geogebra.org/cms/zh_TW/download" target="_blank">http://www.geogebra.org/cms/zh_TW/download</a><br>便携版：<a href="http://www.geogebra.org/cms/zh_TW/portable" target="_blank">http://www.geogebra.org/cms/zh_TW/portable</a>  </p>
<h4 id="Windows">Windows</h4>
<p>国内网盘下载<br>安装包：<a href="http://s.yunio.com/BquU5x" target="_blank">http://s.yunio.com/BquU5x</a><br>便携版：<a href="http://s.yunio.com/oShgqm" target="_blank">http://s.yunio.com/oShgqm</a>  </p>
<p>Windows用户可以在上面的下载页面下载到安装包和便携版本，软件已经集成了Java运行环境，所以用户无需另行安装Java。  </p>
<p>另外由于Java的原因，GeoGebra在Windows下的中文界面字体不是很好看，虽然不影响使用，但我们可以自己动手更换其界面字体使界面更加美观(xp用户就不要改字体了，否则乱码)：  </p>
<p>先下载并安装文泉驿微米黑字体：<a href="http://files.nanpuyue.com/fonts/wqy-microhei.ttc" target="_blank">wqy-microhei.ttc</a><br>然后下载字体配置文件并将其置于指定位置：<a href="http://files.nanpuyue.com/others/geogebra/fontconfig.properties" target="_blank">fontconfig.properties</a>(右键，另存为)  </p>
<p>比如，假设你的GeoGebra安装在<code>C:\Program Files\GeoGebra 4.2\</code>，那么就把<a href="http://files.nanpuyue.com/others/geogebra/fontconfig.properties" target="_blank">fontconfig.properties</a>放在<br><code>C:\Program Files\GeoGebra 4.2\jre\lib\</code>，这样GeoGebra就会以文泉驿微米黑为默认的简体中文字体。<br><img src="https://lh6.googleusercontent.com/--xYaHcQjJZg/UfARE20GilI/AAAAAAAAAYs/tqXEYzaGrHA/s724/GeoGebra.png" alt="效果图">  </p>
<h4 id="Linux">Linux</h4>
<p>主流Linux发行版用户一般可以在软件源中找到GeoGebra，比如Ubuntu用户可以使用下面的命令直接安装：  </p>
<pre><code><span class="built_in">sudo</span> apt-get install geogebra
</code></pre><p>但是这些发行版的源中的GeoGebra一般版本都略旧，我们可以添加GeoGebra的官方源，然后从GeoGebra官方源安装最新的GeoGebra：  </p>
<p>GeoGebra软件源使用说明：<a href="http://software.opensuse.org/download.html?project=home:heimdall78&amp;package=geogebra" target="_blank">http://software.opensuse.org/download.html?project=home:heimdall78&amp;package=geogebra</a><br>你也可以使用我提供的镜像：<a href="http://mirrors.nanpuyue.com/geogebra/help/" target="_blank">http://mirrors.nanpuyue.com/geogebra/help/</a>  </p>
<p>未完待续…</p>
]]></content>
    
    
      <category term="开源" scheme="http://blog.nanpuyue.com/tags/%E5%BC%80%E6%BA%90/"/>
    
      <category term="软件" scheme="http://blog.nanpuyue.com/tags/%E8%BD%AF%E4%BB%B6/"/>
    
      <category term="数学" scheme="http://blog.nanpuyue.com/tags/%E6%95%B0%E5%AD%A6/"/>
    
      <category term="教育" scheme="http://blog.nanpuyue.com/categories/%E6%95%99%E8%82%B2/"/>
    
      <category term="GeoGebra" scheme="http://blog.nanpuyue.com/categories/%E6%95%99%E8%82%B2/GeoGebra/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[搭建基于OpenWrt、gPXE和iSCSI的Windows无盘工作站]]></title>
    <link href="http://blog.nanpuyue.com/2013/028.html"/>
    <id>http://blog.nanpuyue.com/2013/028.html</id>
    <published>2013-02-22T05:29:00.000Z</published>
    <updated>2013-03-23T07:01:05.000Z</updated>
    <content type="html"><![CDATA[<p>本文要介绍的是如何在OpenWrt平台上面搭建无盘工作站服务器以及Windows的iSCSI部署。<br>当然，由于OpenWrt也可以算得上一种Linux发行版了，所以本文所介绍的一些方法，在其它Linux发行版上面仍有一定的参考价值。  </p>
<p>整个过程大概分为以下几步：  </p>
<ul>
<li>给OpenWrt添加iSCSI Target支持</li>
<li>创建并配置iSCSI Target</li>
<li>获取gPXE并配置DHCP及TFTP服务</li>
<li>通过iSCSI部署Windows</li>
<li>测试</li>
</ul>
<h3 id="给OpenWrt添加iSCSI_Target支持">给OpenWrt添加iSCSI Target支持</h3>
<p>到写作本文为止，貌似OpenWrt官方还没有添加iSCSI Target支持相关的软件包，所以我们需要自力更生。然而幸运的是，已经有前人做过了类似的事情，我们只要采取“拿来主义”即可。  </p>
<p>相关资源：<br><a href="https://github.com/tobiaswaldvogel/openwrt-addpack/tree/master/scst" target="_blank">https://github.com/tobiaswaldvogel/openwrt-addpack/tree/master/scst</a><br><a href="https://github.com/tobiaswaldvogel/openwrt-addpack/tree/master/luci-app-scst" target="_blank">https://github.com/tobiaswaldvogel/openwrt-addpack/tree/master/luci-app-scst</a><br>上面分别是在OpenWrt的内核层面实现的iSCSI Target支持及其Luci配置界面，读者需要自行获取这两部分的源码然后进行交叉编译，这也是我最终选用的方案，下文关于iSCSI的内容均基于此。  </p>
<p>另外还有一个在用户空间实现的方案，详情见：<br><a href="https://dev.openwrt.org/ticket/8798" target="_blank">https://dev.openwrt.org/ticket/8798</a><br><a href="http://patchwork.openwrt.org/patch/2597" target="_blank">http://patchwork.openwrt.org/patch/2597</a>  </p>
<p>无论上面哪种方案，就目前而言都需要读者自行编译，但是如何交叉编译OpenWrt所需的软件包不在本文的讨论范围。  </p>
<p>采用第一种方案，进行交叉编译后，会得到以下几个软件包：  </p>
<ul>
<li>kmod-iscsi-scst</li>
<li>kmod-scst</li>
<li>kmod-scst-vdisk</li>
<li>scst</li>
<li>luci-app-scst</li>
</ul>
<p>把它们安装到OpenWrt，这样第一步添加iSCSI Target支持就算完成了。  </p>
<h3 id="创建并配置iSCSI_Target">创建并配置iSCSI Target</h3>
<p>要创建iSCSI Target需要路由器有足够大的存储空间，最好是在路由器上挂载移动硬盘，如果是U盘则最小需要16G的U盘，而且U盘的性能可能会差很多。<br>在进入下面的配置之前，我们需要创建一个固定大小的虚拟磁盘文件，你可以将移动硬盘连接到电脑上进行创建(Windows下创建一个VHD虚拟磁盘文件即可，至于要不要初始化该虚拟磁盘，则需要根据下面的操作决定，所以我建议先不要初始化)，也可以直接在路由器上面创建，直接在路由器上面创建需要使用<code>dd</code>命令，假设你的移动硬盘被挂载到<code>/mnt/sda1</code>,则可以使用下面的命令创建一个15G的文件：  </p>
<pre><code>mkdir /mnt/sda1/iscsi
dd <span class="keyword">if</span>=<span class="regexp">/dev/zero</span> of=<span class="regexp">/mnt/sda</span>1/iscsi/disk1.vhd bs=<span class="number">1</span>M count=<span class="number">15360</span>
</code></pre><p>创建文件的过程需要较长时间，请耐心等待，同时你可以另开一个终端登录路由器，并使用  </p>
<pre><code>du -h /mnt/sda1/iscsi/disk1<span class="preprocessor">.vhd</span>
</code></pre><p>查看文件大小。  </p>
<p>虚拟磁盘文件创建完成后，进入iSCSI Target的Web管理界面(<code>服务</code>-&gt;<code>iSCSI Target</code>)。</p>
<p>先是“Global settings”(全局设置)，里面只有一个“System ID”，就是iSCSI Qualified Name(即ipn)。<br>默认的设置是“iqn.2012-12.org.openwrt”，建议不要更改，至于其命名规范，可参考<a href="http://tools.ietf.org/html/rfc3721#page-5" target="_blank">rfc3721</a>中相关内容。  </p>
<p>然后是“Devices”(设备)，单击<code>添加</code>，添加一个Device，共享名随意(如<code>disk1</code>)，类型只有一个选项——“Image file”，“目录”即虚拟磁盘文件的路径(如<code>/mnt/sda1/iscsi/disk1.vh</code>)。<br>紧接着是“Tagets”，同样单击<code>添加</code>，共享名随意(如<code>iscsiboot</code>)，“Lun”则需填写上面添加的Device的共享名(如<code>disk1</code>)，设置好后别忘了点击<code>保存&amp;应用</code>。  </p>
<p>上面的设置，也可以通过编辑配置文件(<code>/etc/config/scst</code>)完成：  </p>
<pre><code>config global
    <span class="built_in">option</span> id <span class="string">'iqn.2012-12.org.openwrt'</span>

config target
    <span class="built_in">option</span> name <span class="string">'iscsiboot'</span>
    <span class="built_in">list</span> lun <span class="string">'disk1'</span>

config device
    <span class="built_in">option</span> <span class="class"><span class="keyword">type</span> '<span class="title">file</span>'</span>
    <span class="built_in">option</span> blocksize <span class="string">'512'</span>
    <span class="built_in">option</span> name <span class="string">'disk1'</span>
    <span class="built_in">option</span> path <span class="string">'/mnt/sda1/iscsi/disk1.vhd'</span>
</code></pre><p>最后，需要开启scst服务：  </p>
<pre><code>/etc/init<span class="preprocessor">.d</span>/scst enable
/etc/init<span class="preprocessor">.d</span>/scst start
</code></pre><p>如果start失败的话，可能需要重启路由器：  </p>
<pre><code>reboot
</code></pre><p>未完待续……</p>
]]></content>
    
    
      <category term="Windows" scheme="http://blog.nanpuyue.com/tags/Windows/"/>
    
      <category term="无盘工作站" scheme="http://blog.nanpuyue.com/tags/%E6%97%A0%E7%9B%98%E5%B7%A5%E4%BD%9C%E7%AB%99/"/>
    
      <category term="Linux" scheme="http://blog.nanpuyue.com/tags/Linux/"/>
    
      <category term="iSCSI" scheme="http://blog.nanpuyue.com/tags/iSCSI/"/>
    
      <category term="Linux" scheme="http://blog.nanpuyue.com/categories/Linux/"/>
    
      <category term="OpenWrt" scheme="http://blog.nanpuyue.com/categories/Linux/OpenWrt/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[基于OpenWrt的Linux无盘工作站方案]]></title>
    <link href="http://blog.nanpuyue.com/2013/027.html"/>
    <id>http://blog.nanpuyue.com/2013/027.html</id>
    <published>2013-02-14T14:29:00.000Z</published>
    <updated>2013-07-25T02:14:38.000Z</updated>
    <content type="html"><![CDATA[<p>本文要介绍的，是在使用OpenWrt的无线路由器上搭建服务器并以此启动计算机并运行桌面应用的一套方案。  </p>
<p>整个方案要用到的硬件：  </p>
<ul>
<li>一个刷好OpenWrt的带USB接口和有线网络接口的无线路由器(TP-LINK TL-WR720N V3)</li>
<li>一个U盘(PNY 8G)</li>
<li>一根双绞交叉网线</li>
<li>一台支持网络启动的电脑(Acer 4738G)</li>
</ul>
<p>本方案使用的系统为Ubuntu，对版本没有特别的要求，但早期的版本不保证一定能成功，所以首先要准备Ubuntu的Live CD的iso镜像，我使用的是ubuntu-12.04.1-desktop-amd64.iso，如果你的电脑的内存不是很大(我的6G)建议使用32位的镜像。  </p>
<p>下面正式进入实际操作，第一步是挂载U盘，这个可以灵活一些，我的情况是路由器只有4M Flash空间，不足以安装我所需的所有软件包，所以我将U盘分为三个分区：  </p>
<ul>
<li>/dev/sda1    ext4    512M</li>
<li>/dev/sda2    swap    16M</li>
<li>/dev/sda3    ntfs    6.89G</li>
</ul>
<p>其中<code>sda1</code>挂载到<code>/overlay</code>，<code>sda2</code>是交换分区，而sda3则是数据存储分区，它会被OpenWrt自动挂载到<code>/mnt/sda3</code>，关于挂载U盘分区到<code>/overlay</code>的细节，可以参考<a href="http://blog.nanpuyue.com/2012/011.html">http://blog.nanpuyue.com/2012/011.html</a>的后半部分。  </p>
<p>如果你的路由器剩余空间足够大到可以安装下面的软件包，你可以不用挂载U盘分区到<code>/overlay</code>。总之，在确保路由器有足够空间安装所需软件包后安装<code>nfs-kernel-server-utils</code>即可。<br>    opkg update<br>    opkg install nfs-kernel-server-utils<br>这样，路由器会自动安装<code>nfs-kernel-server-utils</code>及其依赖，当然，在安装是有可能出现内核模块(kmod-*)不能安装的问题，这不在本文的讨论范围。  </p>
<p>安装好所需软件包后，就是文件的就位和各种配置了。首先你要确定文件存放位置，这里涉及到两个文件夹，一个是网络启动相关的，一个是nfs相关的，前者用于存放网络启动引导文件，后者用于存放Ubuntu的spuashfs文件系统。当然，它们可以是同一个文件夹，但是我并不推荐那样做。  </p>
<p>最后，我的两个文件夹分别是<code>/mnt/sda3/tftproot</code>和<code>/mnt/sda3/nfsroot</code>。  </p>
<p>然后是上传文件，具体怎么上传，没有要求，只要能将文件放到指定位置即可，可以是scp、ftp、或者通过samba，甚至是将U盘直接查到电脑上复制，都没有关系。  </p>
<p>将Ubuntu Live CD中的<code>casper</code>上传到<code>/mnt/sda3/nfsroot</code>，而<code>/mnt/sda3/tftproot</code>下则需要有以下文件：</p>
<ul>
<li>pxelinux.0</li>
<li>vesamenu.c32</li>
<li>vmlinuz</li>
<li>initrd.lz</li>
</ul>
<p>其中<code>pxelinux.0</code>和<code>vesamenu.c32</code>可以通过下载得到，我是从Debian的ftp上下载到的：<br><a href="ftp://ftp.debian.org/debian/dists/wheezy/main/installer-i386/current/images/netboot/pxelinux.0">pxelinux.0</a><br><a href="ftp://ftp.debian.org/debian/dists/wheezy/main/installer-i386/current/images/netboot/debian-installer/i386/boot-screens/vesamenu.c32">vesamenu.c32</a>  </p>
<p>而<code>vmlinuz</code>和<code>initrd.lz</code>则来自Ubuntu Live CD下的<code>casper</code>目录。  </p>
<p>然后还需要在<code>/mnt/sda3/tftproot</code>下新建目录<code>pxelinux.cfg</code>目录，并在<code>pxelinux.cfg</code>下新建文件<code>default</code>：  </p>
<pre><code><span class="title">cd</span> /mnt/sda3/tftproot
<span class="title">mkdir</span> pxelinux.cfg
<span class="title">vi</span> pxelinux.cfg/<span class="default"><span class="keyword">default</span></span>
</code></pre><p><code>default</code>中需要写入如下内容：</p>
<pre><code>default vesamenu.c32
prompt <span class="number">0</span>
timeout <span class="number">30</span>
menu title <span class="constant">UBUNTU</span> <span class="constant">LIVE</span>
label ^<span class="constant">Ubuntu</span> <span class="constant">Desktop</span>
kernel vmlinuz
append root=<span class="regexp">/dev/nfs</span> boot=casper netboot=nfs nfsroot=<span class="number">192.168</span>.<span class="number">1.1</span><span class="symbol">:/mnt/sda3/nfsroot</span> initrd=initrd.lz locale=zh_CN.<span class="constant">UTF</span>-<span class="number">8</span>
</code></pre><p>其中的<code>nfsroot=192.168.1.1:/mnt/sda3/nfsroot</code>这个参数是要根据实际情况而定的，前面的<code>192.168.1.1</code>是你的路由器的IP，而后面则是之前确定的nfs的目录。  </p>
<p>到这里，所有的文件都已准备妥当了，剩下的就是配置tftp和nfs服务器了，tftp服务器的配置参考<a href="http://blog.nanpuyue.com/2012/012.html">http://blog.nanpuyue.com/2012/012.html</a>最后一步，前面的都不用做，只需要完成Web界面的设置即可：  </p>
<p>TFTP服务器根目录    /mnt/sda3/tftproot<br>网络启动镜像        pxelinux.0  </p>
<p><img src="https://lh6.googleusercontent.com/-oxhpW5KKgW4/UfAMeFEVW8I/AAAAAAAAAWk/ZZlI_lkIjyA/s0/tftp.png" alt="tftp设置">  </p>
<p>然后是配置nfs：  </p>
<pre><code>vi /etc/<span class="built_in">exports</span>
</code></pre><p>先注释掉原来仅有的一行(在<code>/mnt   *(ro,all_squash,insecure,sync)</code>前面插入一个<code>#</code>)，然后添加一行：  </p>
<pre><code>/mnt/sda3/nfsroot *(<span class="keyword">async</span>,no_root_squash,no_subtree_check,ro)
</code></pre><p>最后启动nfs服务：  </p>
<pre><code>/etc/init.d/portmap <span class="operator"><span class="keyword">start</span>
/etc/init.d/nfsd <span class="keyword">start</span></span>
</code></pre><p>如果需要nfs服务自启，则要执行：  </p>
<pre><code>/etc/init<span class="preprocessor">.d</span>/portmap enable
/etc/init<span class="preprocessor">.d</span>/nfsd enable
</code></pre><p>你也可以在Web界面的“系统”-“启动项”下控制上面两个服务。  </p>
<p>至此，整个搭建过程就完成了，剩下的，就是插上网线，重启电脑并选择从网络启动了。<br>然后你会看到下面的界面，这时按下回车或者等待3秒Ubuntu就会启动了，需要提醒的是，启动后与使用CD光盘启动无异，你对系统所做的更改都不会被保存。<br><img src="https://lh6.googleusercontent.com/-U1uPsRcLnKs/UfAMQSLUtGI/AAAAAAAAAVc/7MPKOyVbla4/s0/boot_menu.png" alt="启动菜单"></p>
]]></content>
    
    
      <category term="Linux" scheme="http://blog.nanpuyue.com/categories/Linux/"/>
    
      <category term="OpenWrt" scheme="http://blog.nanpuyue.com/categories/Linux/OpenWrt/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[TP-LINK TL-WR720N V3刷回原厂固件]]></title>
    <link href="http://blog.nanpuyue.com/2013/026.html"/>
    <id>http://blog.nanpuyue.com/2013/026.html</id>
    <published>2013-02-14T05:14:00.000Z</published>
    <updated>2013-07-25T02:15:30.000Z</updated>
    <content type="html"><![CDATA[<p>这里要讲的，是TP-LINK TL-WR720N V3无线路由器已经刷了OpenWrt的情况下刷回TP-LINK原厂固件的方法。  </p>
<p>TP-LINK官方目前提供两个版本的原厂固件下载：<br>TL-WR720N V3_120620标准版：<br><a href="http://service.tp-link.com.cn/detail_download_846.html" target="_blank">http://service.tp-link.com.cn/detail_download_846.html</a>(官方下载页面)<br><a href="http://files.nanpuyue.com/openwrt/ar71xx/tl-wr720n-v3/original/tp-link-wr720nv3-120620.bin" target="_blank">http://files.nanpuyue.com/openwrt/ar71xx/tl-wr720n-v3/original/tp-link-wr720nv3-120620.bin</a>(备用下载)<br>md5sum：<code>43a21a63749479301c495d6b3759e3c7</code><br>TL-WR720N V3_120913标准版：<br><a href="http://service.tp-link.com.cn/detail_download_918.html" target="_blank">http://service.tp-link.com.cn/detail_download_918.html</a>(官方下载页面)<br><a href="http://files.nanpuyue.com/openwrt/ar71xx/tl-wr720n-v3/original/tp-link-wr720nv3-120913.bin" target="_blank">http://files.nanpuyue.com/openwrt/ar71xx/tl-wr720n-v3/original/tp-link-wr720nv3-120913.bin</a>(备用下载)<br>md5sum：<code>1855f08a4e98f8633a16d5b7102309ac</code>  </p>
<p>刷回原厂固件也很简单，只要直接在OpenWrt的Web界面升级即可，但是也有几个要注意的地方，否则可能成“砖”！  </p>
<ul>
<li>只刷经过验证可刷的固件</li>
<li>最好先恢复OpenWrt的设置，如果有U盘，也最好先拔掉，并在重启完成后上传固件</li>
<li>上传固件时一定要去掉“保留配置”的选项</li>
<li>固件上传后仔细确认校验码确保无误</li>
<li>固件刷新时绝对不能断电</li>
</ul>
<p>先说第一条，官方的两个固件版本，120620版的就是经过验证的固件，可刷；而120913版的，就是未经验证的固件，我也不敢验证。细心的同鞋可能会发现两个固件大小有明显差异，具体原因我不确定，不过据说120913版是ver 1.7的硬件专用的。<br>固件版本的问题，搞得不好是要让路由器成砖的，我宁愿先刷120620版再升级120913版(我没有试过)，也不敢直接刷回120913版，事实上，在OpenWrt的Web界面，120913版的固件也是不能通过验证的。也许你可以使用mtd之类的命令强行刷入，但是这样成砖的风险回更大！  </p>
<p>然后是“保留配置”的选项，这个一定不能选，否则同样可能成砖！  </p>
<p>校验码也很重要，因为在固件的下载、复制、移动、上传等各个环节都有可能出错导致固件损坏，只有校验码完全一致，才能保证路由器接收到的固件是正确的。<br><img src="https://lh3.googleusercontent.com/-2r1-rRn1lU4/UfAMQHGyeoI/AAAAAAAAAVQ/3XWV54OqseM/s0/720%E5%8E%9F%E5%8E%82%E5%9B%BA%E4%BB%B6.png" alt="720原厂固件MD5"><br>再次确认下方是否有“配置文件将被删除”的提示，如果提示的是“配置文件将被保留”，请点取消。  </p>
<p>整个固件刷新过程可能需要4到5分钟或者更长，一定耐心等待，不能强行断电，有条件的可以使用接触良好的Micro-USB线连接移动电源或带电池笔记本供电，以防突然停电。  </p>
<p>最后，要注意的是，官方固件的Web管理界面的默认地址是<a href="http://192.168.1.253" target="_blank">http://192.168.1.253</a>。  </p>
]]></content>
    
    
      <category term="Linux" scheme="http://blog.nanpuyue.com/categories/Linux/"/>
    
      <category term="OpenWrt" scheme="http://blog.nanpuyue.com/categories/Linux/OpenWrt/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[来自南浦月的WINE QQ2012]]></title>
    <link href="http://blog.nanpuyue.com/2013/025.html"/>
    <id>http://blog.nanpuyue.com/2013/025.html</id>
    <published>2013-01-18T01:49:00.000Z</published>
    <updated>2013-07-25T02:38:03.000Z</updated>
    <content type="html"><![CDATA[<p>本文的最新版本在<a href="http://blog.nanpuyue.com/2013/025.html">http://blog.nanpuyue.com/2013/025.html</a>  </p>
<p><strong>本版wineqq基于QQ2012 Beta3(4786)，已在Ubuntu 12.04&amp;12.10下测试通过，同时支持32位和64位操作系统。</strong>  </p>
<h2 id="下载地址：">下载地址：</h2>
<h4 id="deb包">deb包</h4>
<p>2013年2月13日：wine-qq2012-nanpuyue_2013-2-13.deb<br><a href="http://s.yunio.com/FMRdMx" target="_blank">http://s.yunio.com/FMRdMx</a>(云诺)<br>md5sum：78a08830579a5dd8023092e94c87bf8f<br>更新内容：  </p>
<ul>
<li>不再集成QQ安装包及微软的dll,所需文件均改由互联网获取</li>
<li>历史版本不再提供下载</li>
</ul>
<p><strong>deb包已集成自编译的Wine 1.5.22，系统无需安装Wine亦可使用</strong>  </p>
<h2 id="deb包安装：">deb包安装：</h2>
<p>64位系统差一个共享厍文件并且还需要安装ia32-libs：  </p>
<pre><code>sudo wget <span class="attribute">-P</span> <span class="string">'/usr/lib/i386-linux-gnu/pkcs11'</span> <span class="string">'http://files.nanpuyue.com/ubuntu/wineqq/so/gnome-keyring-pkcs11.so'</span>
sudo apt<span class="attribute">-get</span> install ia32<span class="attribute">-libs</span>
</code></pre><p><strong>安装有几点注意：</strong>  </p>
<ul>
<li>不要双击打开安装，一定要使用命令安装</li>
<li>安装脚本会自动关闭所有Wine程序，请自己先关闭所有Wine程序，以免造成信息丢失</li>
<li>再重复一遍，一定不要双击打开安装，否则可能造成安装无法完成</li>
</ul>
<p>使用以下命令安装：  </p>
<pre><code>sudo dpkg <span class="attribute">-i</span> <span class="built_in">.</span>/wine<span class="attribute">-qq2012</span><span class="attribute">-nanpuyue_2013</span><span class="subst">-</span><span class="number">2</span><span class="subst">-</span><span class="number">13.</span>deb
</code></pre><p>如果你非要双击使用软件中心安装，则无法完成配置，需要安装完成后使用下面的命令完成配置：  </p>
<pre><code>qq2012 <span class="keyword">install</span>
</code></pre><p>或者  </p>
<pre><code>sudo dpkg<span class="attribute">-reconfigure</span> wine<span class="attribute">-qq2012</span><span class="attribute">-nanpuyue</span>
</code></pre><p>如果你以root用户登录，则安装时也不会进行配置，只能通过下面的命令配置：  </p>
<pre><code>qq2012 <span class="keyword">install</span>
</code></pre><p>配置完成后，不出意外会在桌面生成快捷方式，如果没有快捷方式，或者你喜欢，也可以使用命令启动QQ：  </p>
<pre><code>qq2012 <span class="operator"><span class="keyword">start</span></span>
</code></pre><p>桌面快捷方式，上面那个可以删除，双击即可打开QQ<br><img src="https://lh5.googleusercontent.com/-LDeedfJACTI/UfCNfGAgt7I/AAAAAAAAAbs/Hd1FoBsOj-0/s0/快捷方式.png" alt="快捷方式"><br>登录界面，密码框不会崩溃<br><img src="https://lh6.googleusercontent.com/-AFdaTz8wWG0/UfCNhicDxzI/AAAAAAAAAcI/5LiphBN5Wbs/s0/登录界面.png" alt="登录界面"><br><strong>关闭自动更新</strong><br>主面板，没有黑框和残影，<strong>现在要做的第一件事应该是取消自动更新，因为更新会造成QQ无法打开！</strong><br><img src="https://lh4.googleusercontent.com/-5n51gQO6BRI/UfCNfXCy_MI/AAAAAAAAAbo/S92bWQ8AuAw/s0/主面版.png" alt="主面板"><br><strong>如果面板上已经出现软件更新的图标，请直接在上面单击右键，然后点“退出”，再继续下面的设置：</strong><br><img src="https://lh4.googleusercontent.com/-vInMlEwXcE0/UfCNizP8FgI/AAAAAAAAAcU/qt8LMhJi2QY/s0/退出更新.png" alt="退出更新"><br>单击你的头像，进入设置，再单击“系统设置”<br><img src="https://lh6.googleusercontent.com/-rHo9rhJ_6Ts/UfCNhh8bJkI/AAAAAAAAAcE/P0D5sEjBlhc/s0/设置.png" alt="设置"><br>单击“基本设置”下的“软件更新”，选<strong>“有更新时不要安装，但提醒我”</strong>，然后“确定”<br><img src="https://lh3.googleusercontent.com/-TGtH6ZarCPU/UfCNjG3q3-I/AAAAAAAAAcY/0EQuNcM7gWs/s0/软件更新设置.png" alt="软件更新设置"><br><strong>可以调用系统字体</strong><br><img src="https://lh5.googleusercontent.com/-o8LNDdVzr7Y/UfCNh1ftb9I/AAAAAAAAAcQ/NBX5g91DnQA/s0/调用系统字体.png" alt="调用系统字体"><br>文件发送和接收都是正常的<br><img src="https://lh6.googleusercontent.com/-cuK9ObbaBMw/UfCNgbQQ6XI/AAAAAAAAAb4/43MdxIBXNQs/s0/文件发送.png" alt="文件发送"><br>除本地视频可能不可用以外，其他功能也基本正常，也不会无故崩溃，欢迎测试。<br>还有两个推荐设置，按下图设置后，可以最小化QQ，单击Ubuntu面板上的QQ图标即可呼出：<br><img src="https://lh5.googleusercontent.com/-f1b_tYAF6BM/UfCNfAmkoxI/AAAAAAAAAbk/SG45LKZmbdE/s0/推荐设置.png" alt="推荐设置">  </p>
]]></content>
    
    
      <category term="Linux" scheme="http://blog.nanpuyue.com/categories/Linux/"/>
    
      <category term="Ubuntu" scheme="http://blog.nanpuyue.com/categories/Linux/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[新版Nautilus弹出移动硬盘的问题]]></title>
    <link href="http://blog.nanpuyue.com/2012/023.html"/>
    <id>http://blog.nanpuyue.com/2012/023.html</id>
    <published>2012-12-21T09:04:00.000Z</published>
    <updated>2013-03-04T12:36:32.000Z</updated>
    <content type="html"><![CDATA[<p>最近将Ubuntu升级到了12.10,顺便添加了gnome3-team的ppa源,把Nautilus就升级到了最新的3.6.3。<br>不得不说，新版左边的侧边栏图标的确做得不错，但是也有一些不适应的地方。<br>一是排序的问题，新版目录和文件都混在一起了，对于习惯了目录和文件分开排序好多年的人来说，十分的不方便。<br>二是移动硬盘的弹出，以前在侧边栏上点右键是有“弹出”选项的，选择过后，移动硬盘会断电，然后就可以放心的拔掉了；但是现在却只有“卸载”了，点了“卸载”后移动硬盘仍然在高速转动。要知道，机械硬盘突然断电是十分不妙的。<br>当然，作为一个Linux用户，我们是不能被这种问题所吓到的，在Goolge上翻了几遍后，我终于找到了解决方法。假设移动硬盘是/dev/sdb,先卸载移动硬盘上的分区，然后：  </p>
<pre><code><span class="built_in">sudo</span> udisks --detach /dev/sdb
</code></pre><p>然后移动硬盘就可以“安息”了。</p>
]]></content>
    
    
      <category term="Linux" scheme="http://blog.nanpuyue.com/categories/Linux/"/>
    
      <category term="Ubuntu" scheme="http://blog.nanpuyue.com/categories/Linux/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[2012年12月4日，开始迁移到Octopress]]></title>
    <link href="http://blog.nanpuyue.com/2012/020.html"/>
    <id>http://blog.nanpuyue.com/2012/020.html</id>
    <published>2012-12-04T14:26:00.000Z</published>
    <updated>2013-03-04T12:21:56.000Z</updated>
    <content type="html"><![CDATA[<p>如题，WordPress虽然很优秀，但是资源占用实在是大，我那个128M RAM的VPS跑得有点吃力了。所以，我做出了这个艰难的决定。</p>
]]></content>
    
    
      <category term="生活" scheme="http://blog.nanpuyue.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[在Ubuntu上安装使用深度影音&深度音乐]]></title>
    <link href="http://blog.nanpuyue.com/2012/018.html"/>
    <id>http://blog.nanpuyue.com/2012/018.html</id>
    <published>2012-11-17T04:00:00.000Z</published>
    <updated>2013-07-25T02:44:45.000Z</updated>
    <content type="html"><![CDATA[<p><a href="http://www.linuxdeepin.com" target="_blank">Linux Deepin</a>是国人开发的一个Linux发行版，有很多“中国特色”的东西，比如Wine的QQ和迅雷，值得一试。<br>这里要推荐的是Deepin自家开发的深度影音(deepin-media-player)&amp;深度音乐(deepin-music-player),相比Ubuntu预装的Totem和Rhythmbox多了很多实用功能，界面也美观一些，对中文支持比较好(毕竟是国人自己开发的)。<br><img src="https://lh5.googleusercontent.com/-g6c4KqOos0M/UfCQSQoTwQI/AAAAAAAAAdY/51XA3kAPrRI/s0/深度影音.png" alt="深度影音"><br>总之，这些优点要你自己用了才知道了，所以下面就直接进入正题了。<br>要在Ubuntu上安装深度影音&amp;深度音乐，可以通过安装深度软件中心并添加深度的软件源来实现，但是并不推荐。这里讲手动下载安装，也很简单，但是相比之下更可控，更稳定，不会对系统造成其他不可预测的影响。<br>深度影音(deepin-media-player)&amp;深度音乐(deepin-music-player)均依赖于deepin-ui、python-deepin-utils，deepin-gsettings，而deepin这个包Ubuntu的软件源中是没有的，所以我们要手动下载4个包：python-deepin-utils、deepin-ui、deepin-media-player、deepin-music-player。</p>
<ul>
<li>python-deepin-utils：<a href="http://packages.linuxdeepin.com/deepin/pool/main/d/deepin-utils/" target="_blank">http://packages.linuxdeepin.com/deepin/pool/main/d/deepin-utils/</a></li>
<li>deepin-ui：<a href="http://packages.linuxdeepin.com/deepin/pool/main/d/deepin-ui/" target="_blank">http://packages.linuxdeepin.com/deepin/pool/main/d/deepin-ui/</a>  </li>
<li>deepin-gsettings：<a href="http://packages.linuxdeepin.com/deepin/pool/main/d/deepin-gsettings/" target="_blank">http://packages.linuxdeepin.com/deepin/pool/main/d/deepin-gsettings/</a><br>(选择对应的最新版本，32位系统下载带i386的，64位系统下载带amd64的)</li>
<li>deepin-media-player：<a href="http://packages.linuxdeepin.com/deepin/pool/main/d/deepin-media-player/" target="_blank">http://packages.linuxdeepin.com/deepin/pool/main/d/deepin-media-player/</a></li>
<li>deepin-music-player：<a href="http://packages.linuxdeepin.com/deepin/pool/main/d/deepin-music-player/" target="_blank">http://packages.linuxdeepin.com/deepin/pool/main/d/deepin-music-player/</a><br>(选择最新的即可，不区分32位和64位) </li>
</ul>
<p>然后安装下载的deb包，可以双击安装，但是一定要先安装deepin-ui；也可以使用dpkg安装，可以将三个deb包放到一个文件夹，然后在终端中进入该文件夹，运行如下命令：  </p>
<pre><code><span class="built_in">sudo</span> dpkg -i *deepin*.deb
<span class="built_in">sudo</span> apt-get <span class="operator">-f</span> install
</code></pre><p>不出意外的话，就可以在Dash中找到深度影音&amp;深度音乐了。<br><img src="https://lh3.googleusercontent.com/-oJ1NsDwSk54/UfCQTJI6ThI/AAAAAAAAAdk/IUPL2I6Hz4Y/s0/Dash_Deepin_Player.png" alt="Dash"><br>要将深度影音or深度音乐设为默认播放器的话，用系统设置-详细信息里面的设置貌似没啥效果，我们可以在需要的时候设置下。比如，在一个mp3文件上单击右键-属性-打开方式，然后选中“深度音乐播放器”，单击窗口右下方的“设为默认值”即可。</p>
<p>Enjoy it!</p>
<p>————————Update————————<br>2013-5-27：新增依赖项deepin-gsettings</p>
]]></content>
    
    
      <category term="Linux" scheme="http://blog.nanpuyue.com/tags/Linux/"/>
    
      <category term="Ubuntu" scheme="http://blog.nanpuyue.com/tags/Ubuntu/"/>
    
      <category term="推荐" scheme="http://blog.nanpuyue.com/tags/%E6%8E%A8%E8%8D%90/"/>
    
      <category term="Linux" scheme="http://blog.nanpuyue.com/categories/Linux/"/>
    
      <category term="Ubuntu" scheme="http://blog.nanpuyue.com/categories/Linux/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[GNU/Linux简介(PDF演示文稿)下载]]></title>
    <link href="http://blog.nanpuyue.com/2012/017.html"/>
    <id>http://blog.nanpuyue.com/2012/017.html</id>
    <published>2012-11-09T04:00:00.000Z</published>
    <updated>2013-07-25T02:43:56.000Z</updated>
    <content type="html"><![CDATA[<p>如题，部门例会演示所用，现提供下载。<br><img src="https://lh5.googleusercontent.com/-BOzBj_rz_Nc/UfCQSy7ZaoI/AAAAAAAAAdc/0QASCZ4y0Rk/s0/Linux简介_PDF.png" alt="Linux简介"></p>
<p>下载链接：<a href="http://goo.gl/Nb92K" target="_blank">http://files.nanpuyue.com/documents/linux/Linux简介.pdf</a> </p>
<p>顺便推荐下Dropbox：<a href="http://db.tt/jkDwwEoo" target="_blank">http://db.tt/jkDwwEoo</a></p>
]]></content>
    
    
      <category term="Linux" scheme="http://blog.nanpuyue.com/tags/Linux/"/>
    
      <category term="PDF" scheme="http://blog.nanpuyue.com/tags/PDF/"/>
    
      <category term="下载" scheme="http://blog.nanpuyue.com/tags/%E4%B8%8B%E8%BD%BD/"/>
    
      <category term="Linux" scheme="http://blog.nanpuyue.com/categories/Linux/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[在Windows下强制Chrome使用微软雅黑字体]]></title>
    <link href="http://blog.nanpuyue.com/2012/015.html"/>
    <id>http://blog.nanpuyue.com/2012/015.html</id>
    <published>2012-10-31T04:00:00.000Z</published>
    <updated>2013-03-04T12:28:29.000Z</updated>
    <content type="html"><![CDATA[<p>如题，只要在命令提示符下运行以下命令即可，XP需要自行安装雅黑字体。  </p>
<p>Windows 7  </p>
<pre><code><span class="at_rule">@echo *{</span><span class="attribute">font-family</span><span class="value">:Arial,<span class="string">"Microsoft Yahei"</span> <span class="important">!important</span>;</span>}&gt;&gt;"%LOCALAPPDATA%\Google\Chrome\User Data\<span class="value">Default</span>\User StyleSheets\Custom<span class="class">.css</span>"
</code></pre><p>Windows 8  </p>
<pre><code><span class="at_rule">@echo *{</span><span class="attribute">font-family</span><span class="value">:Arial,<span class="string">"Microsoft Yahei"</span> <span class="important">!important</span>;</span>}&gt;&gt;"%LOCALAPPDATA%\Google\Chrome\User Data\<span class="value">Default</span>\User StyleSheets\Custom<span class="class">.css</span>"
<span class="at_rule">@echo *{</span><span class="attribute">font-family</span><span class="value">:Arial,<span class="string">"Microsoft Yahei"</span> <span class="important">!important</span>;</span>}&gt;&gt;"%LOCALAPPDATA%\Google\Chrome\Metro\User Data\<span class="value">Default</span>\User StyleSheets\Custom<span class="class">.css</span>"
</code></pre><p>Windows XP  </p>
<pre><code><span class="at_rule">@echo *{</span><span class="attribute">font-family</span><span class="value">:Arial,<span class="string">"Microsoft Yahei"</span> <span class="important">!important</span>;</span>}&gt;&gt;"%USERPROFILE%\Local Settings\Application Data\Google\Chrome\User Data\<span class="value">Default</span>\User StyleSheets\Custom<span class="class">.css</span>"
</code></pre>]]></content>
    
    
      <category term="Chrome" scheme="http://blog.nanpuyue.com/tags/Chrome/"/>
    
      <category term="Google" scheme="http://blog.nanpuyue.com/tags/Google/"/>
    
      <category term="Windows" scheme="http://blog.nanpuyue.com/tags/Windows/"/>
    
      <category term="Windows" scheme="http://blog.nanpuyue.com/categories/Windows/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[njit-client 1.2 下载，含OpenWrt可用版本及源代码]]></title>
    <link href="http://blog.nanpuyue.com/2012/014.html"/>
    <id>http://blog.nanpuyue.com/2012/014.html</id>
    <published>2012-10-21T04:00:00.000Z</published>
    <updated>2013-03-04T05:17:35.000Z</updated>
    <content type="html"><![CDATA[<p>如题，<a href="http://sdrv.ms/RdNaGV" target="_blank">http://sdrv.ms/RdNaGV</a></p>
]]></content>
    
    
      <category term="OpenWrt" scheme="http://blog.nanpuyue.com/tags/OpenWrt/"/>
    
      <category term="下载" scheme="http://blog.nanpuyue.com/tags/%E4%B8%8B%E8%BD%BD/"/>
    
      <category term="Linux" scheme="http://blog.nanpuyue.com/categories/Linux/"/>
    
      <category term="OpenWrt" scheme="http://blog.nanpuyue.com/categories/Linux/OpenWrt/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[在OpenWrt上搭建PXE服务器通过网络启动安装Debian]]></title>
    <link href="http://blog.nanpuyue.com/2012/012.html"/>
    <id>http://blog.nanpuyue.com/2012/012.html</id>
    <published>2012-10-15T04:00:00.000Z</published>
    <updated>2013-04-09T10:28:26.000Z</updated>
    <content type="html"><![CDATA[<p>前提：拥有一个带USB接口的并且已刷OpenWrt的路由器，路由器可以联网。  </p>
<p>将U盘挂载到路由器上，这个不在本文讨论范围之类，故假设U盘已经挂在到/mnt/sda1。<br>通过SSH登录路由器，在/mnt/sda1下新建一个文件夹名曰pxe：  </p>
<pre><code><span class="keyword">mkdir</span> -p /mnt/sda1/pxe
</code></pre><p>下载Debian的网络启动相关文件，文件可以在Debian的ftp上找到:<br><a href="ftp://ftp.debian.org/debian/dists/squeeze/main/installer-i386/current/images/netboot/">ftp://ftp.debian.org/debian/dists/squeeze/main/installer-i386/current/images/netboot/</a><br><a href="ftp://ftp.debian.org/debian/dists/wheezy/main/installer-i386/current/images/netboot/">ftp://ftp.debian.org/debian/dists/wheezy/main/installer-i386/current/images/netboot/</a>  </p>
<p>上面分别是两个版本的启动文件，其子目录gtk下也是一套独立的启动文件，是有图形安装界面的。<br>下载要下载整个目录，不需要图形界面的gtk这个目录可以不要，要图形界面的可以只下载gtk这个目录。<br>最好是在Linux下使用wget进行递归下载，因为ftp中有些文件和目录是以链接的形式存在的，在Windows下下载可能造成链接丢失从而导致文件不全。<br>比如：  </p>
<pre><code>wget <span class="subst">--</span>cut<span class="attribute">-dirs</span><span class="subst">=</span><span class="number">9</span> <span class="attribute">-nH</span> <span class="attribute">-P</span> wheezy<span class="attribute">-netboot</span><span class="attribute">-gtk</span> <span class="attribute">-r</span> ftp:<span class="comment">//ftp.debian.org/debian/dists/wheezy/main/installer-i386/current/images/netboot/gtk/</span>
</code></pre><p>或者：  </p>
<pre><code>wget <span class="subst">--</span>cut<span class="attribute">-dirs</span><span class="subst">=</span><span class="number">9</span> <span class="attribute">-nH</span> <span class="attribute">-P</span> squeeze<span class="attribute">-netboot</span><span class="attribute">-gtk</span> <span class="attribute">-r</span> ftp:<span class="comment">//ftp.debian.org/debian/dists/squeeze/main/installer-i386/current/images/netboot/gtk/</span>
</code></pre><p>如果下载很慢，可以换用国内镜像：  </p>
<pre><code>wget <span class="subst">--</span>cut<span class="attribute">-dirs</span><span class="subst">=</span><span class="number">9</span> <span class="attribute">-nH</span> <span class="attribute">-P</span> wheezy<span class="attribute">-netboot</span><span class="attribute">-gtk</span> <span class="attribute">-r</span> ftp:<span class="comment">//mirrors.ustc.edu.cn/debian/dists/wheezy/main/installer-i386/current/images/netboot/gtk/</span>
</code></pre><p>或者：  </p>
<pre><code>wget <span class="subst">--</span>cut<span class="attribute">-dirs</span><span class="subst">=</span><span class="number">9</span> <span class="attribute">-nH</span> <span class="attribute">-P</span> squeeze<span class="attribute">-netboot</span><span class="attribute">-gtk</span> <span class="attribute">-r</span> ftp:<span class="comment">//mirrors.ustc.edu.cn/debian/dists/squeeze/main/installer-i386/current/images/netboot/gtk/</span>
</code></pre><p>如果你要在OpenWrt上直接下载，需要安装wget以替代busybox内建的wget：  </p>
<pre><code>opkg <span class="operator"><span class="keyword">update</span>
opkg install wget</span>
</code></pre><p>这里是上面的命令所下载的文件打包：<br><a href="http://s.yunio.com/Y_7Zhu" target="_blank">wheezy-netboot-gtk_i386.tar.gz</a><br><a href="http://s.yunio.com/Lpmiqy" target="_blank">squeeze-netboot-gtk_i386.tar.gz</a>  </p>
<p>将所下载的文件放置到/mnt/sda1/pxe下，其目录下有类似以下一些文件和文件夹：  </p>
<p><img src="//img.nanpuyue.com/upload/2012/10/27/20121027153306-a819054e.png" alt="文件">  </p>
<p>如果你选择下载我提供的打包文件，可以将wheezy-netboot-gtk_i386.tar.gz上传到路由器/mnt/sda1/pxe，然后解压：  </p>
<pre><code>cd /mnt/sda1/pxe
tar <span class="attribute">-xzvf</span> wheezy<span class="attribute">-netboot</span><span class="attribute">-gtk_i386</span><span class="built_in">.</span>tar<span class="built_in">.</span>gz
</code></pre><p>然后wheezy-netboot-gtk_i386.tar.gz可以删除：  </p>
<pre><code>rm wheezy-netboot-gtk_i386<span class="preprocessor">.tar</span><span class="preprocessor">.gz</span>
</code></pre><p>进入OpenWrt的WEB设置界面，在“网络”-“DNS/DHCP”设置(即Dnsmasq设置)下，选择“TFTP设置”，做如下设置：<br>TFTP服务器根目录    /mnt/sda1/pxe/<br>网络启动镜像        pxelinux.0  </p>
<p><img src="//img.nanpuyue.com/upload/2012/10/27/20121027153310-9ba8094a.png" alt="设置">  </p>
<p>然后点击下方的“保存&amp;应用”。<br>这样，整个搭建过程就完成了，剩下的，只需要将电脑或者服务器接到路由器LAN口，并选择从网络启动即可。</p>
]]></content>
    
    
      <category term="Linux" scheme="http://blog.nanpuyue.com/tags/Linux/"/>
    
      <category term="OpenWrt" scheme="http://blog.nanpuyue.com/tags/OpenWrt/"/>
    
      <category term="PXE" scheme="http://blog.nanpuyue.com/tags/PXE/"/>
    
      <category term="Linux" scheme="http://blog.nanpuyue.com/categories/Linux/"/>
    
      <category term="OpenWrt" scheme="http://blog.nanpuyue.com/categories/Linux/OpenWrt/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[TP-LINK TL-WR720N V3 OpenWrt 固件下载]]></title>
    <link href="http://blog.nanpuyue.com/2012/011.html"/>
    <id>http://blog.nanpuyue.com/2012/011.html</id>
    <published>2012-10-13T04:00:00.000Z</published>
    <updated>2013-07-25T02:21:54.000Z</updated>
    <content type="html"><![CDATA[<h3 id="固件信息">固件信息</h3>
<p>系统名称    OpenWrt<br>路由型号    TP-Link TL-WR720N v3<br>固件版本    OpenWrt Barrier Breaker r35420 / LuCI Trunk (trunk+svn9664)<br>内核版本    3.7.5<br>编译时间    2013年2月2日<br>编译者    <a href="http://blog.nanpuyue.com">南浦月</a><br><img src="https://lh3.googleusercontent.com/-mwcUuTpAz1g/UfAMQFsKpcI/AAAAAAAAAVY/RdC975YXX2I/s0/TL-WR720N.png" alt="TL-WR720N">  </p>
<h3 id="固件特性">固件特性</h3>
<p>调整：  </p>
<ul>
<li>默认中文</li>
<li>默认UTC+8时区</li>
<li>默认Bootstrap主题</li>
<li>默认无线开启</li>
</ul>
<p>修正：  </p>
<ul>
<li>修正实时信息界面的错别字(“链接”应作“连接”)</li>
</ul>
<p>其他：  </p>
<ul>
<li>默认使用自建软件源，解决安装内核模块时版本不一致的问题(配置文件在/etc/opkg.conf)</li>
</ul>
<p><img src="https://lh3.googleusercontent.com/-CrEEIm1cJiE/UfAMZ2WHnlI/AAAAAAAAAV8/HaejMt3Cmdo/s0/opkg_conf.png" alt="opkg配置"></p>
<h3 id="下载地址">下载地址</h3>
<p>提供两个定制版本下载，一个usb扩展版，一个mini最小化版，原厂固件刷“factory”，已经是OpenWrt的刷“sysupgrade”。<br>usb版：<br><a href="http://files.nanpuyue.com/openwrt/ar71xx/tl-wr720n-v3/usb/openwrt-ar71xx-generic-tl-wr720n-v3-squashfs-sysupgrade.bin" target="_blank">http://files.nanpuyue.com/openwrt/ar71xx/tl-wr720n-v3/usb/openwrt-ar71xx-generic-tl-wr720n-v3-squashfs-sysupgrade.bin</a><br><a href="http://files.nanpuyue.com/openwrt/ar71xx/tl-wr720n-v3/usb/openwrt-ar71xx-generic-tl-wr720n-v3-squashfs-factory.bin" target="_blank">http://files.nanpuyue.com/openwrt/ar71xx/tl-wr720n-v3/usb/openwrt-ar71xx-generic-tl-wr720n-v3-squashfs-factory.bin</a><br>md5校验值：  </p>
<pre><code>a85c09fd6ee80661a7170c2cab145b3a    openwrt<span class="attribute">-ar71xx</span><span class="attribute">-generic</span><span class="attribute">-tl</span><span class="attribute">-wr720n</span><span class="attribute">-v3</span><span class="attribute">-squashfs</span><span class="attribute">-factory</span><span class="built_in">.</span>bin
<span class="number">7979</span>c3ddaaea325b707f8d8e55ebb5ff    openwrt<span class="attribute">-ar71xx</span><span class="attribute">-generic</span><span class="attribute">-tl</span><span class="attribute">-wr720n</span><span class="attribute">-v3</span><span class="attribute">-squashfs</span><span class="attribute">-sysupgrade</span><span class="built_in">.</span>bin
</code></pre><p><strong>刷机前请仔细核对。</strong><br>mini版：<br><a href="http://files.nanpuyue.com/openwrt/ar71xx/tl-wr720n-v3/mini/openwrt-ar71xx-generic-tl-wr720n-v3-jffs2-factory.bin" target="_blank">http://files.nanpuyue.com/openwrt/ar71xx/tl-wr720n-v3/mini/openwrt-ar71xx-generic-tl-wr720n-v3-jffs2-factory.bin</a><br><a href="http://files.nanpuyue.com/openwrt/ar71xx/tl-wr720n-v3/mini/openwrt-ar71xx-generic-tl-wr720n-v3-jffs2-sysupgrade.bin" target="_blank">http://files.nanpuyue.com/openwrt/ar71xx/tl-wr720n-v3/mini/openwrt-ar71xx-generic-tl-wr720n-v3-jffs2-sysupgrade.bin</a><br><a href="http://files.nanpuyue.com/openwrt/ar71xx/tl-wr720n-v3/mini/openwrt-ar71xx-generic-tl-wr720n-v3-squashfs-factory.bin" target="_blank">http://files.nanpuyue.com/openwrt/ar71xx/tl-wr720n-v3/mini/openwrt-ar71xx-generic-tl-wr720n-v3-squashfs-factory.bin</a><br><a href="http://files.nanpuyue.com/openwrt/ar71xx/tl-wr720n-v3/mini/openwrt-ar71xx-generic-tl-wr720n-v3-squashfs-sysupgrade.bin" target="_blank">http://files.nanpuyue.com/openwrt/ar71xx/tl-wr720n-v3/mini/openwrt-ar71xx-generic-tl-wr720n-v3-squashfs-sysupgrade.bin</a><br>md5校验值：  </p>
<pre><code><span class="number">9</span>dfdb11af85642d3d5b911a45db61a9d    openwrt<span class="attribute">-ar71xx</span><span class="attribute">-generic</span><span class="attribute">-tl</span><span class="attribute">-wr720n</span><span class="attribute">-v3</span><span class="attribute">-jffs2</span><span class="attribute">-factory</span><span class="built_in">.</span>bin
<span class="number">453122</span>a31c987e9a9627de6cffae86f0    openwrt<span class="attribute">-ar71xx</span><span class="attribute">-generic</span><span class="attribute">-tl</span><span class="attribute">-wr720n</span><span class="attribute">-v3</span><span class="attribute">-jffs2</span><span class="attribute">-sysupgrade</span><span class="built_in">.</span>bin
<span class="number">2e57317</span>dd55514b131fa2307ce2341ed    openwrt<span class="attribute">-ar71xx</span><span class="attribute">-generic</span><span class="attribute">-tl</span><span class="attribute">-wr720n</span><span class="attribute">-v3</span><span class="attribute">-squashfs</span><span class="attribute">-factory</span><span class="built_in">.</span>bin
<span class="number">9648</span>d237485802f27b35b460fcd817f4    openwrt<span class="attribute">-ar71xx</span><span class="attribute">-generic</span><span class="attribute">-tl</span><span class="attribute">-wr720n</span><span class="attribute">-v3</span><span class="attribute">-squashfs</span><span class="attribute">-sysupgrade</span><span class="built_in">.</span>bin
</code></pre><p><strong>刷机前请仔细核对!</strong><br>Image Builder：<br><a href="http://s.yunio.com/mMriUr" target="_blank">http://s.yunio.com/mMriUr</a>(云诺)<br>文件名：openwrt_image_builder_ar71xx_x64_2013-2-4.tar.gz  </p>
<p>md5校验值：c1562373db6a340f84f566cd26b29a33</p>
<h3 id="云诺注册邀请">云诺注册邀请</h3>
<p><a href="https://www.yunio.com/index/url/code/UWcvTGJ3VkVraTdLRWlhaENJai9Wc1dpKzNxclFFRW05ZktiZ3VtaXpvZ1N0Ylpqa3FuR3RvQQ==" target="_blank">https://www.yunio.com/index/url/code/UWcvTGJ3VkVraTdLRWlhaENJai9Wc1dpKzNxclFFRW05ZktiZ3VtaXpvZ1N0Ylpqa3FuR3RvQQ==</a></p>
<h3 id="USB版固件设置U盘扩展">USB版固件设置U盘扩展</h3>
<p>首先，我并不推荐exroot，这里介绍的方法是将U盘挂载到<code>/overlay</code>的方法。<br>先将U盘分区，这里提供的固件并没有集成分区工具，所以不能完成分区，当然你也可以不分区，这样整个U盘就是一个分区。<br>然后格式化要挂载的分区格式化为ext4，可以在Linux系统的电脑上完成，也可以在路由器上完成。假设这个分区是<code>/dev/sda1</code>(如果没有分区，它可能是<code>/dev/sda</code>)，则使用下面的命令完成格式化：  </p>
<pre><code>mkfs<span class="preprocessor">.ext</span>4 /dev/sda1
</code></pre><p>然后就可以将其挂载点设置为/overlay了:<br><img src="https://lh4.googleusercontent.com/-RQlNXiIWYF4/UfAMhQui8VI/AAAAAAAAAXI/nyvgoOdsh9o/s0/挂载到overlay.png" alt="挂载到overlay"><br>设置好后点“保存&amp;应用”并重启即可，如果不想重启后其他设置恢复初始值，可以在重启前备份设置，并在重启后以恢复备份文件即可。<br>另外要注意的是，如果U盘没有被挂载到<code>/overlay</code>，而是<code>/tmp/overlay-disabled</code>,请删除<code>/tmp/overlay-disabled/etc/extroot.md5sum</code>后重启。  </p>
<h3 id="设置40MHz频宽">设置40MHz频宽</h3>
<p>默认的无线是20MHz的频宽，我没有更改默认设置，但是这样无线速率最高只有150M的一半，如果想要150M的无线速率，要将频宽设置为40MHz：<br><img src="https://lh5.googleusercontent.com/-nk7rFP10wIg/UfAMWIE4l1I/AAAAAAAAAVs/Jzlh3weh8W4/s0/openwrt_40MHz.png" alt="OpenWrt-40MHz"><br>“HT模式”选“40MHz HT40-”和“40MHz HT40+”均可，下面的“强制40MHz频宽”不是必须的，但是不勾选的话可能造成客户端仍以20MHz频宽连接。  </p>
<h3 id="Image_Builder使用方法">Image Builder使用方法</h3>
<p>由于我是在64位系统上编译的，所以这个Image Builder也是64位的，使用时解压，终端进入解压所得文件夹。<br>显示帮助信息：  </p>
<pre><code>make <span class="built_in">help</span>
</code></pre><p>上面提供下载的固件分别是用下面的命令生成的：<br>usb版  </p>
<pre><code>make image PROFILE=<span class="string">"TLWR720"</span> PACKAGES=<span class="string">"luci luci-theme-bootstrap luci-i18n-chinese kmod-usb-storage kmod-usb-storage-extras kmod-usb2 kmod-fs-ext4 kmod-fs-ntfs kmod-fs-vfat e2fsprogs block-mount"</span> FILES=<span class="built_in">files</span>/
</code></pre><p>mini版  </p>
<pre><code>make image PROFILE=<span class="string">"TLWR720"</span> PACKAGES=<span class="string">"luci luci-theme-bootstrap luci-i18n-chinese -kmod-usb2 -kmod-usb-core"</span> FILES=<span class="built_in">files</span>/
</code></pre><p><code>PROFILE=</code>后跟的参数是要生成固件的路由器型号，使用<code>make info</code>可以查看可用型号列表，<code>PACKAGES=</code>后的参数是在默认软件包的基础上要添加或删除的软件包，软件包名前加减号表示删除，<code>FILES=</code>后则是要在固件中额外添加的文件。</p>
]]></content>
    
    
      <category term="OpenWrt" scheme="http://blog.nanpuyue.com/tags/OpenWrt/"/>
    
      <category term="下载" scheme="http://blog.nanpuyue.com/tags/%E4%B8%8B%E8%BD%BD/"/>
    
      <category term="Linux" scheme="http://blog.nanpuyue.com/categories/Linux/"/>
    
      <category term="OpenWrt" scheme="http://blog.nanpuyue.com/categories/Linux/OpenWrt/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[解决Ubuntu中Rhythmbox播放器mp3中文标签乱码]]></title>
    <link href="http://blog.nanpuyue.com/2012/010.html"/>
    <id>http://blog.nanpuyue.com/2012/010.html</id>
    <published>2012-10-05T04:00:00.000Z</published>
    <updated>2013-03-10T10:52:37.000Z</updated>
    <content type="html"><![CDATA[<p>在终端运行命令：  </p>
<pre><code>echo export <span class="constant">GST_ID3_TAG_ENCODING</span>=<span class="constant">UTF</span>-<span class="number">8</span><span class="symbol">:GBK</span><span class="symbol">:GB2312</span><span class="symbol">:GB18030&gt;&gt;~/</span>.profile
echo export <span class="constant">GST_ID3V2_TAG_ENCODING</span>=<span class="constant">UTF</span>-<span class="number">8</span><span class="symbol">:GBK</span><span class="symbol">:GB2312</span><span class="symbol">:GB18030&gt;&gt;~/</span>.profile
</code></pre><p>完成后注销一下，先删除播放器中的播放列表，然后重新导入即可。</p>
]]></content>
    
    
      <category term="Linux" scheme="http://blog.nanpuyue.com/tags/Linux/"/>
    
      <category term="Ubuntu" scheme="http://blog.nanpuyue.com/tags/Ubuntu/"/>
    
      <category term="乱码" scheme="http://blog.nanpuyue.com/tags/%E4%B9%B1%E7%A0%81/"/>
    
      <category term="Linux" scheme="http://blog.nanpuyue.com/categories/Linux/"/>
    
      <category term="Ubuntu" scheme="http://blog.nanpuyue.com/categories/Linux/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[使用Virtual Disk Development Kit挂载虚拟磁盘]]></title>
    <link href="http://blog.nanpuyue.com/2012/006.html"/>
    <id>http://blog.nanpuyue.com/2012/006.html</id>
    <published>2012-05-28T04:00:00.000Z</published>
    <updated>2013-03-10T10:52:18.000Z</updated>
    <content type="html"><![CDATA[<p>如标题所说，这里需要用到一个工具：Virtual Disk Development Kit，这是Vmware的产品，不过是免费的。<br>官方下载页面：<br><a href="http://goo.gl/M5n3o" target="_blank">vSphere 5.0.1 Virtual Disk Development Kit</a><br><a href="http://goo.gl/aYNS1" target="_blank">vSphere 5.0.2 Virtual Disk Development Kit</a><br>要在官方下载，需要注册并登录，读者请自行完成。<br>下载后首先安装，Windows下安装很简单，Linux下的安装下面会讲，以Ubuntu 12.04为例。<br>Windows下和Linux下的用法大同小异，我只举出几个例子。  </p>
<h2 id="Windows">Windows</h2>
<p>使用命令提示符，进入vmware-mount所在的路径，如“C:\Program Files\VMware\VMware Virtual Disk Development Kit\bin”，当然，具体路径要看你安装好的路径。<br>但是我推荐将vmware-mount.exe所在的路径加入环境变量，方法是这样的:<br>单击开始，在搜索框中输入“环境变量”，出现两个结果，一个“编辑用户环境变量”，一个“编辑系统环境变量”，按你的需要选择一个即可，比如，我们单击“编辑用户环境变量”，然后在弹出的窗口的下部，有一个变量叫“Path”,我们单击选中，然后单击下面的“编辑”，在弹出的窗口中添加上vmware-mount.exe所在的路径即可；注意，比如原来的值是：  </p>
<pre><code><span class="variable">%SystemRoot</span><span class="variable">%\</span>system32;<span class="variable">%SystemRoot</span><span class="variable">%;</span><span class="variable">%SystemRoot</span><span class="variable">%\</span>System32\Wbem;<span class="variable">%SYSTEMROOT</span><span class="variable">%\</span>System32\WindowsPowerShellv1<span class="number">.0</span>
</code></pre><p>我们添加后变成：  </p>
<pre><code><span class="variable">%SystemRoot</span><span class="variable">%\</span>system32;<span class="variable">%SystemRoot</span><span class="variable">%;</span><span class="variable">%SystemRoot</span><span class="variable">%\</span>System32\Wbem;<span class="variable">%SYSTEMROOT</span><span class="variable">%\</span>System32\WindowsPowerShellv1<span class="number">.0</span>;C:\Program Files\VMware\VMware Virtual Disk Development Kit\bin
</code></pre><p>这样以后要使用挂载的命令就不必进入安装目录，而是可以直接使用。<br>要挂载一个虚拟磁盘：  </p>
<pre><code>vmware-mount <span class="constant">Z</span><span class="symbol">:</span> <span class="constant">D</span><span class="symbol">:ubuntu</span>.vmdk /<span class="symbol">v:</span><span class="number">1</span>
</code></pre><p>注意路径中有空格的要用引号把路径括起来，这样ubuntu.vmdk中的第一个卷就会被挂载到Z:，/v:1可以省略，默认为1，如果要挂载虚拟磁盘中的第二个卷就必须加上/v:2。<br>卸载：  </p>
<pre><code>vmware<span class="attribute">-mount</span> Z: /d
</code></pre><p>列出当前挂载的虚拟磁盘：  </p>
<pre><code>vmware<span class="attribute">-mount</span> /L
</code></pre><p>或者  </p>
<pre><code>vmware<span class="attribute">-mount</span>
</code></pre><p>其余命令就不介绍了，使用vmware-mount /?查看帮助。  </p>
<h2 id="Linux">Linux</h2>
<p>先将下载所得VMware-vix-disklib-*.tar.gz解压，比如解压到桌面，然后打开终端，进入解压所得的目录，安装：  </p>
<pre><code><span class="built_in">sudo</span> ./vmware-install.pl
</code></pre><p>期间需要按很多次回车，建议先一直按住回车键，直到询问 yes 或 no 时，输入 y ,回车，然后会询问安装位置，默认是/usr，直接回车使用默认值，安装即完成。<br>在Linux下，可能会出现VixDiskLib: Failed to load libvixDiskLibVim.so: Error = …的错误，解决方法如下：  </p>
<pre><code><span class="built_in">sudo</span> sh -c <span class="string">"echo /usr/lib/vmware-vix-disklib/lib64&gt;/etc/ld.so.conf.d/x86_x64-vmware-vix-disklib.conf"</span>
<span class="built_in">sudo</span> sh -c <span class="string">"echo /usr/lib/vmware-vix-disklib/lib32&gt;/etc/ld.so.conf.d/i386-vmware-vix-disklib.conf"</span>
<span class="built_in">sudo</span> ldconfig
</code></pre><p>具体需要视你的系统而定，32位系统就不用建立x86_x64-vmware-vix-disklib.conf，64位系统也可以不建立i386-vmware-vix-disklib.conf，但是ldconfig是一定要执行的。<br>另外提醒下，”x86_x64-vmware-vix-disklib.conf”这个文件名前面的”x86_x64-“前缀是一定要有的，不要去掉，否则会有各种问题产生。<br>挂载：  </p>
<pre><code><span class="built_in">sudo</span> vmware-mount ~/Virtualbox/windows.vhd <span class="number">1</span> ~/windows
</code></pre><p>其中1是要挂载的卷，~/windows是挂载点，挂载点其实就是文件夹，一定要事先建好，~表示用户目录，比如我的用户名是nanpuyue，那么~/windows也可以写成/home/nanpuyue/windows，路径中有空格的要用引号把路径括起来。<br>卸载：  </p>
<pre><code><span class="built_in">sudo</span> vmware-mount <span class="operator">-d</span> ~/windows
</code></pre><p>另外，在Linux中要卸载Virtual Disk Development Kit，使用命令下面的命令：  </p>
<pre><code>sudo vmware<span class="attribute">-uninstall</span><span class="attribute">-vix</span><span class="attribute">-disklib</span><span class="built_in">.</span>pl
</code></pre><p>或者：  </p>
<pre><code>sudo /usr/bin/vmware<span class="attribute">-uninstall</span><span class="attribute">-vix</span><span class="attribute">-disklib</span><span class="built_in">.</span>pl
</code></pre><p>查看帮助：  </p>
<pre><code>vmware<span class="attribute">-mount</span>
</code></pre><p>或者  </p>
<pre><code><span class="comment">vmware</span><span class="literal">-</span><span class="comment">mount</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">help</span>
</code></pre><p>更新历史：<br>2013-1-3:添加vSphere 5.0.2 Virtual Disk Development Kit下载地址，其他修正。</p>
]]></content>
    
    
      <category term="Linux" scheme="http://blog.nanpuyue.com/tags/Linux/"/>
    
      <category term="Ubuntu" scheme="http://blog.nanpuyue.com/tags/Ubuntu/"/>
    
      <category term="虚拟化" scheme="http://blog.nanpuyue.com/tags/%E8%99%9A%E6%8B%9F%E5%8C%96/"/>
    
      <category term="虚拟化" scheme="http://blog.nanpuyue.com/categories/%E8%99%9A%E6%8B%9F%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Ubuntu 12.04下编译OpenWrt教程]]></title>
    <link href="http://blog.nanpuyue.com/2012/002.html"/>
    <id>http://blog.nanpuyue.com/2012/002.html</id>
    <published>2012-03-22T04:00:00.000Z</published>
    <updated>2013-03-04T12:42:40.000Z</updated>
    <content type="html"><![CDATA[<h3 id="搭建编译环境">搭建编译环境</h3>
<p>Ubuntu x64 12.04下的命令：  </p>
<pre><code>sudo apt<span class="attribute">-get</span> install subversion
sudo apt<span class="attribute">-get</span> install git
sudo apt<span class="attribute">-get</span> install flex
sudo apt<span class="attribute">-get</span> install g<span class="subst">++</span>
sudo apt<span class="attribute">-get</span> install gawk
sudo apt<span class="attribute">-get</span> install zlib1g<span class="attribute">-dev</span>
sudo apt<span class="attribute">-get</span> install libncurses5<span class="attribute">-dev</span>
</code></pre><p>当然，也可以将上面的命令合起来：  </p>
<pre><code>sudo apt<span class="attribute">-get</span> install subversion git flex g<span class="subst">++</span> gawk zlib1g<span class="attribute">-dev</span> libncurses5<span class="attribute">-dev</span>
</code></pre><h3 id="建立工作目录及获取openwrt源码">建立工作目录及获取openwrt源码</h3>
<pre><code>mkdir openwrt
cd openwrt
svn co <span class="symbol">svn:</span>/<span class="regexp">/svn.openwrt.org/openwrt</span><span class="regexp">/trunk/</span>
</code></pre><p>trunk是openwrt的开发版，openwrt有好几个分支，要编译其它分支，sun://后的换为相应的地址即可。<br>建立openwrt文件夹是为了方便存放不同分支的代码，如果你不需要，可以省略“mkdir openwrt”及“cd openwrt”。<br>如果svn的速度慢，可以使用openwrt的第三方镜像，比如国内的openwrt中文论坛所建的镜像。</p>
<h3 id="更新feed及添加package">更新feed及添加package</h3>
<p>openwrt的一些额外功能都是通过package实现的，很多个package就组成了一个feed，我们可以根据需求更新自己想要的feed的源。 例如我们需要luci的web管理界面和python的支持，那么我们需要更新luci和packages的feed源：  </p>
<pre><code><span class="built_in">cd</span> trunk
./scripts/feeds update luci packages
./scripts/feeds install luci packages
</code></pre><p>当然，我们推荐更新所有feed并添加所有package  </p>
<pre><code>./scripts/feeds update <span class="operator">-a</span>
./scripts/feeds install <span class="operator">-a</span>
</code></pre><h3 id="配置及编译">配置及编译</h3>
<p>进入配置界面  </p>
<pre><code><span class="built_in">make</span> menuconfig
</code></pre><p>以后再次编译时，要先切换到工作目录：  </p>
<pre><code><span class="built_in">cd</span> openwrt
<span class="built_in">cd</span> trunk
</code></pre><p>然后在次过程中选择好target system和target profile，target system需要看你路由器的cpu芯片信息，target profile是你路由器的型号。接下来就可以根据自己的需求进行定制了，添加上需要的支持或去掉无用的包，按“Y”在固件中添加包按“Y”,按“N”去 掉不需要的包。<br>要运行OH3C，必须有python-mini（lang-&gt;python-&gt;python-mini)的支持。<br>如果你的路由器flash空间比较紧张，可以去掉下面的包:  </p>
<ul>
<li>Kernel modules-&gt;Network Support-&gt;kmod-ppp</li>
<li>Network-&gt;ppp</li>
</ul>
<p>选好后就保存配置退出开始编译了：  </p>
<pre><code>make <span class="attribute">-j</span>
</code></pre><p>-j 后面可以跟参数，即同时进行的任务数，比如2或4，不跟参数意为不限制同时进行的任务数，会大大减少编译的时间，特别是首次编译。<br>编译过程中可能不会下载一些东西，所以断网可能造成编译中断，编译所需时间与你的CPU及网速有很大关系，一般首次编译在40分钟到2小时之间不等。以后的编译一般在30分钟之内。</p>
<h3 id="生成的固件在~/openwrt/trunk/bin/XXXXX目录下。">生成的固件在~/openwrt/trunk/bin/XXXXX目录下。</h3>
]]></content>
    
    
      <category term="OpenWrt" scheme="http://blog.nanpuyue.com/tags/OpenWrt/"/>
    
      <category term="Ubuntu" scheme="http://blog.nanpuyue.com/tags/Ubuntu/"/>
    
      <category term="教程" scheme="http://blog.nanpuyue.com/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="编译" scheme="http://blog.nanpuyue.com/tags/%E7%BC%96%E8%AF%91/"/>
    
      <category term="Linux" scheme="http://blog.nanpuyue.com/categories/Linux/"/>
    
      <category term="OpenWrt" scheme="http://blog.nanpuyue.com/categories/Linux/OpenWrt/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[OH3C的安装及使用 H3C 802.1x Client for OpenWrt]]></title>
    <link href="http://blog.nanpuyue.com/2012/003.html"/>
    <id>http://blog.nanpuyue.com/2012/003.html</id>
    <published>2012-03-22T04:00:00.000Z</published>
    <updated>2013-07-25T02:49:22.000Z</updated>
    <content type="html"><![CDATA[<p>OH3C是基于Openwrt路由器固件平台的H3C 802.1x兼容客户端，基于YaH3C开发。</p>
<p>目前已经实现的功能有：</p>
<ul>
<li>H3C 802.1x认证</li>
<li>多用户管理</li>
<li>mac绑定设置及自动修改mac</li>
</ul>
<p>项目主页：<br>Github：<a href="https://github.com/nanpuyue/oh3c" target="_blank">https://github.com/nanpuyue/oh3c</a><br>Google Code：<a href="https://code.google.com/p/oh3c" target="_blank">https://code.google.com/p/oh3c</a>  </p>
<p>下载：<br><a href="https://code.google.com/p/oh3c/downloads/list" target="_blank">https://code.google.com/p/oh3c/downloads/list</a>  </p>
<h2 id="前提">前提</h2>
<p>首先要会用ssh登录路由器，但是如果是首次将路由器刷成openwrt或者复位过设置，那么路由器是没有密码，也不会允许ssh登录的，解决方法是使用telnet登录或者web登录设置密码。在windows下面telnet和ssh登录可以使用<a href="http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html" target="_blank">Putty</a>。<br><img src="https://lh3.googleusercontent.com/-bUwNCZtKOSs/UfARRB4yVYI/AAAAAAAAAZg/Wfff7Y1E4Wc/s0/telnet.png" alt="Putty telnet"><br><img src="https://lh4.googleusercontent.com/-1IZ5YCfdNM8/UfARMcr-xjI/AAAAAAAAAZI/N8xBvutIZdQ/s0/ssh.png" alt="Putty ssh"><br>你还可以在Saved Sessions下面填上一个名称，然后点击保存，以后直接在下面点击这个名称，再点Load、Open就可以登录了。 需要注意的是登录ssh是需要输入你设置的密码，但是密码不会显示，对，连星号都不会显示，只管输入就是了。<br><img src="https://lh6.googleusercontent.com/-MpB2v7dgSIE/UfARN8ruTWI/AAAAAAAAAZY/NVNwBWN8qpI/s0/ssh_login.png" alt="ssh login"></p>
<h2 id="依赖">依赖</h2>
<ul>
<li>python-mini</li>
</ul>
<p>或者使用python-mini-oh3c代替，python-mini-oh3c在<a href="https://code.google.com/p/oh3c/downloads/list" target="_blank">本项目下载页面</a>下载。 下面是快速下载链接：<br><a href="https://oh3c.googlecode.com/files/python-mini-oh3c_2.6.4-4_ar71xx.ipk" target="_blank">python-mini-oh3c_2.6.4-4_ar71xx.ipk</a><br><a href="https://oh3c.googlecode.com/files/python-mini-oh3c_2.6.4-4_brcm63xx.ipk" target="_blank">python-mini-oh3c_2.6.4-4_brcm63xx.ipk</a><br><a href="https://oh3c.googlecode.com/files/python-mini-oh3c_2.7.3-1_ar71xx.ipk" target="_blank">python-mini-oh3c_2.7.3-1_ar71xx.ipk</a><br>一般的openwrt固件不包含python的支持，所以你可以自行编译一个带python-mini的固件，或者直接在路由器里面利用包管理软件安装python-mini(路由器须联网):  </p>
<pre><code>opkg <span class="operator"><span class="keyword">update</span>
opkg install python-mini</span>
</code></pre><p>如果无法联网，可以下载python-mini或者python-mini-oh3c，上传到路由器的/tmp目录，建议windows用户使用<a href="http://winscp.net/eng/docs/lang:chs" target="_blank">Winscp</a>上传文件！再ssh登录路由器安装：  </p>
<pre><code>opkg <span class="keyword">install</span> /tmp/python-mini*.ipk
</code></pre><p>安装时如果提示依赖zlib而无法安装，请<a href="http://downloads.openwrt.org/attitude_adjustment/12.09-rc1/" target="_blank">下载zlib</a>上传到路由器/tmp目录。 先安装zlib，再安装python-mini或python-mini-oh3c：  </p>
<pre><code>opkg <span class="keyword">install</span> /tmp/zlib*.ipk
opkg <span class="keyword">install</span> /tmp/python-mini*.ipk
</code></pre><h2 id="安装OH3C">安装OH3C</h2>
<p>OH3C目前有两个版本，一个web界面控制版，需luci支持：luci-app-oh3c，还有一个命令行版，没有web界面，两个版本不能共存，只能任选其一。<br>如果你使用的是trunk版的openwrt，建议使用luci-app-oh3c:<br><a href="https://oh3c.googlecode.com/files/luci-app-oh3c_2013-2-6_all.ipk" target="_blank">luci-app-oh3c_2013-2-6_all.ipk</a><br>带Web界面的版本可以使用命令传递参数使用，用法是：  </p>
<pre><code>python /usr/oh3c/oh3c.py <span class="tag">&lt;<span class="title">username</span>&gt;</span> <span class="tag">&lt;<span class="title">password</span>&gt;</span> <span class="tag">&lt;<span class="title">dev</span>&gt;</span> <span class="tag">&lt;<span class="title">mac</span>&gt;</span>
</code></pre><p>如果不绑定mac，mac一项可以使用default，下面是自启脚本，只适用于带web界面的版本：  </p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
</pre></td><td class="code"><pre><span class="comment">#!/bin/sh /etc/rc.common</span>
<span class="comment"># Copyright (C) 2012 OpenWrt.org</span>
<span class="comment"># Copyright (C) 2013 nanpuyue@gmail.com</span>

START=<span class="number">90</span>

current=`uci get oh3ctest.@control[<span class="number">0</span>].current`
ifname=`uci get oh3ctest.@control[<span class="number">0</span>].ifname`

<span class="keyword">for</span> i <span class="keyword">in</span> `seq <span class="number">0</span> <span class="number">10</span>`;<span class="keyword">do</span>
	username=`uci get oh3ctest.@userinfo[<span class="variable">$i</span>].username`;
	<span class="keyword">if</span> [ <span class="variable">$username</span> = <span class="variable">$current</span> ];<span class="keyword">then</span>
		password=`uci get oh3ctest.@userinfo[<span class="variable">$i</span>].password`
		macaddr=`uci get oh3ctest.@userinfo[<span class="variable">$i</span>].macaddr`
		<span class="keyword">break</span>
	<span class="keyword">fi</span>;
<span class="keyword">done</span>

<span class="function"><span class="title">start</span></span>() {
python /usr/oh3c/oh3c.py <span class="variable">$current</span> <span class="variable">$password</span> <span class="variable">$ifname</span> <span class="variable">$macaddr</span> &gt;&gt; /tmp/log/oh3c
}

<span class="function"><span class="title">stop</span></span>() {
pid=`ps | grep /usr/oh3c/oh3c.py | grep -v grep | awk <span class="string">'{printf $1}'</span>`
<span class="keyword">if</span> [ -n <span class="string">"<span class="variable">$pid</span>"</span> ];<span class="keyword">then</span>
	kill <span class="variable">$pid</span>
<span class="keyword">fi</span>
}

<span class="function"><span class="title">restart</span></span>() {
stop
start
}
</pre></td></tr></table></figure>

<p>将脚本保存为<code>/etc/init.d/oh3c</code>，运行<code>/etc/init.d/oh3c enable</code>启用自启动。  </p>
<p>dreambox由于暂时有兼容性问题，所以不能使用带luci界面支持的，请下载下面命令行版本包：<br><a href="https://oh3c.googlecode.com/files/oh3c_2013-2-6_all.ipk" target="_blank">oh3c_2013-2-6_all.ipk</a>  </p>
<p>在Linux下使用命令行上传文件想来对于Linux用户不是难事，就略过了。  </p>
<h2 id="使用OH3C">使用OH3C</h2>
<p>安装luci-app-oh3c的童鞋，使用浏览器从web端登录路由器，OH3C控制入口在Network[网络]——OH3C。 另外建议使用主题bootstrap:  </p>
<pre><code>opkg update
opkg install luci<span class="attribute">-theme</span><span class="attribute">-bootstrap</span>
</code></pre><p>点击Add[添加]添加用户，设置好用户名、密码，如果有需要，切换到Advanced Settings[高级设置]标签设置连网设备及mac。 然后点击Save[保存],要注意的是，新添加的用户<strong>要点两次Save[保存]</strong>才能在下面的Current user中选择。 点击Save&amp;Appy[保存&amp;应用]连网。 目前无法显示连网状态，如果再次点击Save&amp;Appy[保存&amp;应用]会断网。<br><img src="https://lh3.googleusercontent.com/--gzWhbLOakk/UfARFuNg7RI/AAAAAAAAAY4/gKI80m8qw3g/s0/oh3c_01.png" alt="OH3C_1"><br>要切换用户，只需要在Current user中选择相应的用户，依次点击Save[保存]和Save&amp;Appy[保存&amp;应用]即可。<br><img src="https://lh5.googleusercontent.com/-vjHeqH63uN0/UfARF5FhRxI/AAAAAAAAAY8/bAgbK-oxAC4/s0/oh3c_02.png" alt="OH3C_2"></p>
<p>需要注意的是，如果你使用的mac绑定功能，这时会修改路由器wan口的mac地址，所以相应时间会久一些，还有极少数情况连接失败，这时请再次点击Save&amp;Appy[保存&amp;应用]。 web版的OH3C连接时不会有屏幕输出信息，但是所有输出信息都保存在/tmp/log/oh3c中，重启路由器后消失，如果使用中遇到问题，可以将此文件中的内容贴出来。</p>
<p>使用命令行版本的童鞋，先使用ssh登录路由器，输入命令：  </p>
<pre><code>oh3c
</code></pre><p>然后按提示操作即可。</p>
<p>从V0.2开始，OH3C加入了mac设置项，以方便mac绑定的情况，如果你不需要设置mac，命令行版本请在设置帐号要求输入mac时直接回车，web版请保持默认的default，这样该帐号联网时就不会更改mac，而保持之前的mac设置。</p>
<p>另外，如果你的路由器仅有4M flash，建议自己编译固件，你可以在编译openwrt时去掉和PPP和PPPOE相关的包，这样固件体积会缩小很多。</p>
<p>如果使用中有任何问题，欢迎反馈：<br><a href="https://code.google.com/p/oh3c/issues/list" target="_blank">https://code.google.com/p/oh3c/issues/list</a></p>
]]></content>
    
    
      <category term="802.1x" scheme="http://blog.nanpuyue.com/tags/802.1x/"/>
    
      <category term="OH3C" scheme="http://blog.nanpuyue.com/tags/OH3C/"/>
    
      <category term="OpenWrt" scheme="http://blog.nanpuyue.com/tags/OpenWrt/"/>
    
      <category term="开源" scheme="http://blog.nanpuyue.com/tags/%E5%BC%80%E6%BA%90/"/>
    
      <category term="校园网" scheme="http://blog.nanpuyue.com/tags/%E6%A0%A1%E5%9B%AD%E7%BD%91/"/>
    
      <category term="Linux" scheme="http://blog.nanpuyue.com/categories/Linux/"/>
    
      <category term="OpenWrt" scheme="http://blog.nanpuyue.com/categories/Linux/OpenWrt/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[公元2012年3月19日，南浦月博客开博了]]></title>
    <link href="http://blog.nanpuyue.com/2012/001.html"/>
    <id>http://blog.nanpuyue.com/2012/001.html</id>
    <published>2012-03-19T04:00:00.000Z</published>
    <updated>2013-03-04T05:18:29.000Z</updated>
    <content type="html"><![CDATA[<p>开博的想法有了很久，今天终于付诸实践了。</p>
]]></content>
    
    
      <category term="南浦月" scheme="http://blog.nanpuyue.com/tags/%E5%8D%97%E6%B5%A6%E6%9C%88/"/>
    
      <category term="生活" scheme="http://blog.nanpuyue.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
</feed>
